// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PuppyPlace.Data;

#nullable disable

namespace PuppyPlace.Data.Migrations
{
    [DbContext(typeof(PuppyPlaceContext))]
    partial class PuppyPlaceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DogPerson", b =>
                {
                    b.Property<Guid>("DogsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OwnersId")
                        .HasColumnType("uuid");

                    b.HasKey("DogsId", "OwnersId");

                    b.HasIndex("OwnersId");

                    b.ToTable("DogPerson");
                });

            modelBuilder.Entity("PuppyPlace.Domain.Dog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Dogs");
                });

            modelBuilder.Entity("PuppyPlace.Domain.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("DogPerson", b =>
                {
                    b.HasOne("PuppyPlace.Domain.Dog", null)
                        .WithMany()
                        .HasForeignKey("DogsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PuppyPlace.Domain.Person", null)
                        .WithMany()
                        .HasForeignKey("OwnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuppyPlace.Domain.Dog", b =>
                {
                    b.OwnsOne("PuppyPlace.Domain.ValueObjects.DogValueObjects.DogAge", "Age", b1 =>
                        {
                            b1.Property<Guid>("DogId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("Age");

                            b1.HasKey("DogId");

                            b1.ToTable("Dogs");

                            b1.WithOwner()
                                .HasForeignKey("DogId");
                        });

                    b.OwnsOne("PuppyPlace.Domain.ValueObjects.DogValueObjects.DogBreed", "Breed", b1 =>
                        {
                            b1.Property<Guid>("DogId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Breed");

                            b1.HasKey("DogId");

                            b1.ToTable("Dogs");

                            b1.WithOwner()
                                .HasForeignKey("DogId");
                        });

                    b.OwnsOne("PuppyPlace.Domain.ValueObjects.DogValueObjects.DogName", "Name", b1 =>
                        {
                            b1.Property<Guid>("DogId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Name");

                            b1.HasKey("DogId");

                            b1.ToTable("Dogs");

                            b1.WithOwner()
                                .HasForeignKey("DogId");
                        });

                    b.Navigation("Age")
                        .IsRequired();

                    b.Navigation("Breed")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("PuppyPlace.Domain.Person", b =>
                {
                    b.OwnsOne("PuppyPlace.Domain.ValueObjects.PersonValueObjects.PersonName", "Name", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Name");

                            b1.HasKey("PersonId");

                            b1.ToTable("Persons");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
