@page "/adopt-dog/{id:guid}"
@using PuppyPlace.Blazor.Features.Shared
@inject HttpClient _httpClient

@if (PersonName != null)
{
    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    Choose a dog for @PersonName
                </div>
                <div class="card-body">
                    @if (DogList != null)
                    {
                        <EditForm Model="DogId" OnSubmit="@SubmitForm">
                            <InputRadioGroup @bind-Value="DogId">
                                @foreach (var dog in DogList)
                                {
                                    <InputRadio Value="@dog.Id"/>@dog.Name<br/>
                                }
                            </InputRadioGroup>
                            <button type="submit" class="btn btn-primary">Submit</button>
                            <div>&nbsp;</div>
                            <div>@_message</div>
                        </EditForm>
                    }
                    else
                    {
                        <h3>There was a problem displaying the dogs :(</h3>
                        <a href="@("/dogs")" class="btn btn-info">View Dogs</a>
                        <a href="@("/persons")" class="btn btn-info">View People</a>
                    }
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div>There was a problem loading the person to update</div>
    <a href="@("/dogs")" class="btn btn-info">View Dogs</a>
    <a href="@("/persons")" class="btn btn-info">View People</a> 
}

@if (SuccessDialogueOpen)
{
    <ModalDialogue
        Title="Success!"
        Text="What would you like to do?"
        OnClose="@OnSuccessDialogueClose"
        DialogueType="ModalDialogue.ModalDialogueType.AddAnotherDogsPeople">
    </ModalDialogue>
}

@code {
    [Parameter]
    public Guid Id { get; set; }
    
    [Parameter]
    public Guid DogId { get; set; }

    private string? PersonName { get; set; }
   
    private string? _message = "";
    
    private IEnumerable<GetDogDto>? DogList { get; set; } = new List<GetDogDto>();
    
    private bool SuccessDialogueOpen { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadDogs();
        await LoadPerson();
    }

    private async Task LoadDogs()
    {
        DogList = await _httpClient.GetFromJsonAsync<IEnumerable<GetDogDto>>("Dog");
        StateHasChanged();
    }

    private async Task LoadPerson()
    {
        var person = await _httpClient.GetFromJsonAsync<GetPersonDto>($"Person/{Id}");
        PersonName = person?.Name;
    }
    
    private async Task SubmitForm()
    {
        var httpRequestMessage = new HttpRequestMessage()
        {
            Method = new HttpMethod("POST"),
            RequestUri = new Uri($"https://localhost:7079/api/Person/{Id}/dog/{DogId}")
        };

        var response = await _httpClient.SendAsync(httpRequestMessage);
        
        if (!response.IsSuccessStatusCode)
        {
            _message = "There was a problem adopting the dog";
        }
        else
        {
            _message = "Success!";
            SuccessDialogueOpen = true; 
        }
    }
    
    private async Task OnSuccessDialogueClose(bool accepted)
    {
        SuccessDialogueOpen = false;
    }
}