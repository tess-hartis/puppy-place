@page "/dogs"
@using PuppyPlace.Blazor.Features.Shared
@inject HttpClient _httpClient;

<div class="row">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                Dogs
            </div>
            <div class="card-body">
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Age</th>
                        <th>Breed</th>
                        <th>&nbsp;</th>
                        <th>&nbsp;</th>
                    </tr>
                    </thead>
                    <tbody>
                    @if (DogList == null)
                    {
                        <tr><td><em>Loading...</em></td></tr>
                    }
                    else
                    {
                        @foreach (var dog in DogList)
                        {
                            <tr>
                                <td>@dog.Name</td>
                                <td>@dog.Age</td>
                                <td>@dog.Breed</td>
                                <td><button type="button" 
                                            class="btn btn-danger"
                                            @onclick="(() => OpenDeleteDialogue(dog))">Delete</button></td>
                                <td>
                                    <a href="@($"/dog/{dog.Id}")" class="btn btn-info">Info</a>
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <AddDogForm OnSubmitCallback="@Refresh"></AddDogForm>
    </div>
</div>
<div>&nbsp;</div>

@if (DeleteDialogueOpen)
{
    <ModalDialogue
        Title="Are you sure?"
        Text="Do you want to delete this entry?"
        OnClose="@OnDeleteDialogueClose"
        DialogueType="ModalDialogue.ModalDialogueType.DeleteCancel">
    </ModalDialogue>
}

@code {
    private IEnumerable<GetDogDto>? DogList { get; set; } = new List<GetDogDto>();

    private GetDogDto? _dogToDelete;
    private bool DeleteDialogueOpen { get; set; }
    
    private async Task OnDeleteDialogueClose(bool accepted)
    {
        if (accepted)
        {
            await _httpClient.DeleteAsync($"Dog/{_dogToDelete.Id}");
            await LoadData();
            _dogToDelete = null;
        }
        
        DeleteDialogueOpen = false;
        StateHasChanged();
    }
    
    private void OpenDeleteDialogue(GetDogDto dog)
    {
        DeleteDialogueOpen = true;
        _dogToDelete = dog;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        DogList = await _httpClient
            .GetFromJsonAsync<IEnumerable<GetDogDto>>("Dog");
        StateHasChanged();
    }

    private async void Refresh()
    {
        await LoadData();
    }
}