@page "/add-owner/{id:guid}"
@using PuppyPlace.Blazor.Features.Shared
@inject HttpClient _httpClient

@if (DogName != null)
{
    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    Choose an owner for @DogName
                </div>
                <div class="card-body">
                    <EditForm Model="OwnerId" OnSubmit="@SubmitForm">
                        @if (PersonList != null)
                        {
                            <InputRadioGroup @bind-Value="OwnerId">
                                @foreach (var person in PersonList)
                                {
                                    <InputRadio Value="@person.Id"/>@person.Name<br/>
                                }
                            </InputRadioGroup>
                            <div>&nbsp;</div>
                            <button type="submit" class="btn btn-primary">Submit</button>
                            <div>&nbsp;</div>
                            <div>@_message</div>
                        }
                        else
                        {
                            <div>Loading...</div>
                        }
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div>There was a problem loading the dog to update</div>
    <a href="@("/dogs")" class="btn btn-info">View Dogs</a>
    <a href="@("/persons")" class="btn btn-info">View People</a> 
}


@if (SuccessDialogueOpen)
{
    <ModalDialogue
        Title="Success!"
        Text="What would you like to do?"
        OnClose="@OnSuccessDialogueClose"
        DialogueType="ModalDialogue.ModalDialogueType.AddAnotherDogsPeople">
    </ModalDialogue>
}

@code {
    [Parameter]
    public Guid Id { get; set; }
    
    [Parameter]
    public Guid OwnerId { get; set; }
    
    [Parameter]
    public string DogName { get; set; }
    
    private bool _submitSuccessful;
    private string? _message = "";

    private IEnumerable<GetPersonDto>? PersonList { get; set; } = new List<GetPersonDto>();
    
    private bool SuccessDialogueOpen { get; set; }
    

    protected override async Task OnInitializedAsync()
    {
        await LoadPeople();
        await LoadDog();
    }

    private async Task LoadPeople()
    {
        PersonList = await _httpClient.GetFromJsonAsync<IEnumerable<GetPersonDto>>("Person");
        StateHasChanged();
    }

    private async Task LoadDog()
    {
        var dog = await _httpClient.GetFromJsonAsync<GetDogDto>($"Dog/{Id}");
        DogName = dog.Name;
    }

    private async Task SubmitForm()
    {
        var httpRequestMessage = new HttpRequestMessage()
        {
            Method = new HttpMethod("POST"),
            RequestUri = new Uri($"https://localhost:7079/api/Dog/{Id}/owner/{OwnerId}")
        };

        var response = await _httpClient.SendAsync(httpRequestMessage);
        
        if (!response.IsSuccessStatusCode)
        {
            _message = "There was a problem adding the owner";
            _submitSuccessful = false;
        }

        _message = "Success!";
        _submitSuccessful = true;
        SuccessDialogueOpen = true;
    }

    private async Task OnSuccessDialogueClose(bool accepted)
    {
        SuccessDialogueOpen = false;
    }
   
    
    

}