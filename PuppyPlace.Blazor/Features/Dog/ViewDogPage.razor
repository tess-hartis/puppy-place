@page "/dog/{id:guid}"
@inject HttpClient _httpClient;

@if (Dog != null)
{
    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    @Dog.Name
                </div>
                <div class="card-body">
                    <div>
                        ID: @Dog.Id
                    </div>
                    <div>
                        Age: @Dog.Age
                    </div>
                    <div>
                        Breed: @Dog.Breed
                    </div>
                    <div>
                        <div>&nbsp;</div>
                        Owners:
                        @if (Dog.Owners.Any())
                        {
                            @foreach (var owner in Dog.Owners)
                            {
                                <div>@owner</div>
                            }
                        }
                        else
                        {
                            <div>There are no owners to show</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div>&nbsp;</div>
    <a href="@($"/update-dog/{Dog.Id}")" class="btn btn-primary">Edit Info</a>
    <a href="@($"/add-owner/{Dog.Id}")" class="btn btn-primary">Add Owner</a>
    <a href="@("/dogs")" class="btn btn-info">View Dogs</a>
    <a href="@("/persons")" class="btn btn-info">View People</a>
}
else
{
    <h3>There was a problem displaying the dog :(</h3>
    <a href="@("/dogs")" class="btn btn-info">View Dogs</a>
    <a href="@("/persons")" class="btn btn-info">View People</a>
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    public GetDogDto? DogDto { get; set; } = new GetDogDto();

    protected override async Task OnInitializedAsync()
    {
        DogDto = await _httpClient
            .GetFromJsonAsync<GetDogDto>($"Dog/{Id}");
    }

}